// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider     = "prisma-client-js"
  output       = "../src/generated"
  moduleFormat = "esm"
  runtime      = "bun"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String
  email         String       @unique()
  password_hash String
  credentials   Credential[]
  workflows     Workflow[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(email)
  @@map("user")
}

model Workflow {
  id          String  @id @default(cuid())
  title       String
  enabled     Boolean
  nodes       Json[]
  connections Json[]

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("workflow")
}

model Webhook {
  id     String  @id @default(cuid())
  title  String
  method Methods
  path   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([method, path])
  @@map("webhook")
}

model Credential {
  id       String             @id @default(cuid())
  title    String             @unique
  platform SupportedPlatforms
  data     Json

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(title)
  @@map("credential")
}

enum Methods {
  POST
  GET
  PUT
}

enum SupportedPlatforms {
  Telegram
  Gmail
  Slack
  Discord
  Webhook
  Twilio
}
